---

- name: Prepare
  hosts: all
  become: yes
  vars:

    proxy_use: "{{ True if ( https_proxy is defined and https_proxy|length > 0 ) else False }}"
    https_proxy: "{{ lookup('env', 'HTTPS_PROXY') | default('') }}"
    http_proxy: "{{ lookup('env', 'HTTP_PROXY') | default('') }}"
    no_proxy: "{{ lookup('env', 'NO_PROXY') | default('127.0.0.1,localhost') }}"
    molecule_driver: "{{ lookup('env', 'MOLECULE_DRIVER_NAME') }}"

    iptables_distros:
      - debian10
      - ubuntu1804
      - rhel7
      - centos7
      - alpine3

    ufw_distros:
      - debian11
      - ubuntu2004
      - ubuntu2204

    firewalld_distros:
      - fedora35
      - fedora36
      - centos8
      - centos9
      - oraclelinux8
      - oraclelinux9
      - rocky8
      - rocky9
      - almalinux8
      - almalinux9

    systemctl_alternative: False
    update_all: True
    activate_epel: True
    prepare_firewall: True
    enable_root_access: True
    root_pubkey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCyahsHvvvNH16iD7CVSv+S+4XiKnfGKiZOVbUIjCUeZIO8A2GVrpGc+qAe5ObM3B7qTXD/A90a9x4MMHZLMKh4ej+41GNG74m7AEYPc3LSNPyYx7pB0Z/gMs8Va6/essFNsGXx/qLI84ijYEEYn9twCJyJHzcn5XahuHpY3a57NkahTy1MG5IJJgPmk2pA/uSNQ+LVtYurTUkparTwU+3xspS6/vkI+PVFbd4F922Ldn278rXF87knpxzIMGpiJIfQH0SMVDLoH9Fi1heMmPXAVpuHx77mM90eWaz9WhVzACvDcl34z22+0xZMpxyHOwPZAw24dFG1Xp+4CVnCgN6ssSa8nO2ZF4CGLCBIUgozB9VXtlbJrcC2oi2Dg52RG8MNtma48nhvQhTcl9SBBz07oWkz5osos0qq30PnAvFSrrL/bRY59lLly1mDMTA7/KanzprOh2hDagk6qUgflK9WKDb574XDFOOK+uijk0mDJ3xYi6M3/NN0EsDR6wcQut/H61ruQtb6apLEAVzcJX/kxWDXbPaq+vYaHoAIPBsBCyrdpt0QsYVbI9gMzL+jnpNP0AFIZ04HQIo14Vw4GNmQ9gJlm0KrDHA/9U9SP2Yytv0Jw7nClXyZ12+gGDfZRaj/6nfK0T1h9cPbIc2RAhXjyBr7kJ38BbIK+mhZodtbmQ==
  tasks:

    - name: Create remote_tmp
      file:
        path: /root/.ansible/tmp
        state: directory
        mode: "0700"

    - name: Define molecule distro
      set_fact:
        molecule_distro: >-
          {%- if ansible_distribution == 'Ubuntu' -%}
          {{ (ansible_distribution | lower) + (ansible_distribution_version | regex_replace('\.')) }}
          {%- elif ansible_distribution == 'CentOS' and ansible_distribution_release == 'Stream' -%}
          {{ (ansible_distribution | lower) + ansible_distribution_major_version + 's' }}
          {%- else -%}
          {{ (ansible_distribution | lower) + ansible_distribution_major_version }}
          {%- endif -%}

    - name: Show settings
      debug:
        msg:
          molecule_distro: "{{ molecule_distro }}"
          molecule_driver: "{{ molecule_driver }}"
          proxy_use: "{{ proxy_use }}"
          https_proxy: "{{ https_proxy }}"
          http_proxy: "{{ http_proxy }}"
          no_proxy: "{{ no_proxy }}"
          prepare_firewall: "{{ prepare_firewall | default(False) }}"
          update_all: "{{ update_all | default(False) }}"

    - name: Enable root access
      block:

        - name: Create /root/.ssh
          file:
            path: /root/.ssh
            state: directory
            owner: root
            group: root
            mode: "0700"

        - name: Setup pubkey authentication for root
          authorized_key:
            user: root
            state: present
            key: "{{ root_pubkey }}"

      when:
        - molecule_driver is search('^(hetznercloud|vagrant)$')
        - enable_root_access is defined and enable_root_access|bool
        - root_pubkey is defined
   

    - name: family Debian
      block:

        - name: Configure APT to use proxy
          copy:
            content: |
              Acquire::http::proxy "{{ http_proxy }}/";
              Acquire::https::proxy "{{ https_proxy }}/";
              Acquire::gtp::proxy "{{ https_proxy }}/";
            dest: /etc/apt/apt.conf.d/80proxy
            owner: root
            group: root
            mode: "0644"
          when: proxy_use is defined and proxy_use|bool

        - name: Update APT cache
          apt:
            update_cache: yes
            cache_valid_time: 0

        - name: Upgrade APT packages
          apt:
            force_apt_get: yes
            upgrade: yes
          when: update_all is defined and update_all|bool

        - name: Install default packages
          package:
            name:
              - lsb-release
              - netbase
              - gnupg
              - ssh
            state: present

      when: ansible_os_family == 'Debian'

    - name: family RedHat < 8
      block:

        - name: Configure YUM to use proxy
          lineinfile:
            path: /etc/yum.conf
            line: "proxy={{ https_proxy }}"
            regexp: "^proxy=.*$"
          when: proxy_use is defined and proxy_use|bool

        - name: Update YUM cache  # noqa command-instead-of-module
          command: yum makecache
          changed_when: false
          args:
            warn: false

        - name: Upgrade YUM packages  # noqa package-latest
          yum:
            name: '*'
            state: latest
          when: update_all is defined and update_all|bool

        - name: Install default packages
          package:
            name:
              - openssh-server
              - openssh-clients
              - iproute
              - hostname
            state: present

        - name: Activate epel repository
          include_role:
            name: epel
          when: activate_epel is defined and activate_epel|bool

      when: ansible_os_family == 'RedHat' and (ansible_distribution_major_version|int) < 8

    - name: family RedHat 8+
      block:

        # Switch to CentOS 8 vault mirrors
        - name: Get all repo files
          find:
            paths: /etc/yum.repos.d
            patterns: 'CentOS-Linux-*'
          register: _repo
          when: molecule_distro == 'centos8'

        - name: Update repo files to point to CentOS vault mirror (1)
          replace:
            path: "{{ item.path }}"
            regexp: "^mirrorlist"
            replace: "#mirrorlist"
          loop: "{{ _repo.files }}"
          loop_control:
            label: "{{ item.path }}"
          when: molecule_distro == 'centos8'

        - name: Update repo files to point to CentOS vault mirror (2)
          replace:
            path: "{{ item.path }}"
            regexp: "^#baseurl=http://mirror.centos.org"
            replace: "baseurl=http://vault.epel.cloud"
          loop: "{{ _repo.files }}"
          loop_control:
            label: "{{ item.path }}"
          when: molecule_distro == 'centos8'

        - name: Configure DNF to use proxy
          lineinfile:
            path: /etc/dnf/dnf.conf
            line: "proxy={{ https_proxy }}"
            regexp: "^proxy=.*$"
          when: proxy_use is defined and proxy_use|bool

        - name: Update DNF cache
          dnf:
            update_cache: yes

        - name: Upgrade DNF packages  # noqa package-latest
          dnf:
            name: '*'
            state: latest
          when: update_all is defined and update_all|bool

        - name: Install default packages
          package:
            name:
              - hostname
              - openssh-server
              - openssh-clients
              - iproute
            state: present

        - name: Activate epel repository
          include_role:
            name: epel
          when: activate_epel is defined and activate_epel|bool and ansible_distribution != 'Fedora'

      when: ansible_os_family == 'RedHat' and (ansible_distribution_major_version|int) >= 8


    - name: Firewall
      block:

        - name: Install iptables
          include_role:
            name: iptables
          when: molecule_distro in iptables_distros

        - name: Install ufw
          include_role:
            name: ufw
          when: molecule_distro in ufw_distros

        - name: Install firewalld
          include_role:
            name: firewalld
          when: molecule_distro in firewalld_distros

      when:
        - prepare_firewall is defined and prepare_firewall|bool
        - inventory_hostname is not search('-dns$')

    - name: Reboot the server
      include_role:
        name: reboot
      when: molecule_driver is search('^(vagrant|hetznercloud)$')

    - name: re-run setup
      setup:

    - name: localhosts
      block:

        - name: Register all nodes in /etc/hosts
          include_role:
            name: hosts
          vars:
            hosts_mode: hosts

      when: register_hosts is defined and register_hosts|bool

