---

name: CI

on:
  pull_request:
  push:
    branches-ignore:
      - master
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * 1"

defaults:
  run:
    working-directory: "de-it-krachten/ansible-role-awx_docker"


jobs:

  lint:
    name: "${{ matrix.name }}"
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "ansible_2.17"
            # ansible: "ansible>10,<11"
            ansible: "ansible-core>2.17,<2.18"
            ansible_lint: "ansible-lint"
          - name: "ansible_2.18"
            # ansible: "ansible>11,<12"
            ansible: "ansible-core>2.18,<2.19"
            ansible_lint: "ansible-lint"

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: "${{ github.repository }}"

      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'


      - name: Show runner info
        run: |

          hostname="$(hostname -f)"
          eval os_name=$(awk -F= '/^NAME=/ {print $2}' /etc/os-release)
          eval os_version=$(awk -F= '/^VERSION=/ {print $2}' /etc/os-release)
          os="$os_name $os_version"
          user="$(id -un)"
          python=$(which python3)

          echo "hostname : $hostname"
          echo "user     : $user"
          echo "os       : $os"
          echo "python   : $python ($(python3 --version))"

      - name: Disable specific apparmor profiles
        run: |
          sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

      - name: Install test dependencies.
        run: |
          sudo rm -f /usr/bin/yq
          python3 -m venv ~/.venv
          source ~/.venv/bin/activate
          pip3 install pip wheel setuptools --upgrade
          pip3 install "${{ matrix.ansible }}" "${{ matrix.ansible_lint }}" yamllint jmespath yq e2j2 jinja2-ansible-filters
          pip3 list

      - name: Retrieve & install wrapper scripts
        run: |
          set -e
          sudo apt install curl
          curl -s -o /tmp/install.sh \
            https://raw.githubusercontent.com/de-it-krachten/ansible-role-molecule/dev/files/install.sh
          bash /tmp/install.sh

      - name: Install required galaxy collections
        run: |
          source ~/.venv/bin/activate
          /usr/local/bin/ansible-collections.sh

      - name: For ansible 2.9, we need to perform some tweaking
        run: |
          source ~/.venv/bin/activate
          ansible=$(pip show ansible 2>/dev/null | awk '/Version:/ {print $2}')
          ansible_core=$(pip show ansible-core 2>/dev/null | awk '/Version:/ {print $2}')
          ansible=${ansible:-$ansible_core}
          echo "Ansible version = $ansible"
          if [[ $ansible =~ 2.9.* ]]
          then
            echo "Patching for Rocky support"
            site=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
            sed -i "s/'AlmaLinux'\],/'AlmaLinux', 'Rocky'\],/" $site/ansible/module_utils/facts/system/distribution.py
            echo "Downgrading 'community.general' to '3.8.3'"
            ansible-galaxy collection install community.general:3.8.3 --force
          else
            echo "No need to patch it"
          fi

      - name: Show component versions
        run: |
          source ~/.venv/bin/activate
          ansible --version
          ansible-lint --version
          yamllint --version

      - name: Lint code.
        run: |
          set -e
          source ~/.venv/bin/activate
          yamllint .
          ansible-lint.sh

